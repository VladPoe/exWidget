{"version":3,"sources":["components/ErrorScreen/errorScreen.module.css","components/ExchangeWidget/exchangeWidget.module.css","components/Navigation/navigation.module.css","components/Preloader/preloader.module.css","components/CommonButton/commonButton.module.css","assets/icons/astronaut.svg","services/domainServerService.js","store/actions/index.js","constants/currencies.js","constants/userData.js","utils/openExchangeUtils.js","services/openExchangeService.js","utils/currencies.js","utils/decimal.js","utils/conversion.js","store/actions/thunks.js","components/CommonButton/CommonButton.js","components/MajorTom/MajorTom.js","components/ErrorScreen/ErrorScreen.js","constants/routes.js","components/ExchangeWidget/CurrencyState.js","selectors/index.js","components/ExchangeWidget/ExchangeSum.js","HOC/CurrencyStatePropsPropxy.js","HOC/ExchangeNavigationPropsProxy.js","components/ExchangeWidget/ExchangeResult.js","components/Navigation/index.js","components/ExchangeWidget/ExchangeBtn.js","utils/countNewBalance.js","components/ExchangeWidget/ExchangeWidget.js","HOC/WithExchangeRatesSubscription.js","components/Preloader/Preloader.js","components/ExchangeWidget/ExchangeWidgetContainer.js","utils/ratesRequestInterval.js","routes/RootRouter.js","components/GlobalPreloader/GlobalPreloader.js","App.js","store/reducers/appStatus.js","store/reducers/user.js","store/reducers/rates.js","store/reducers/exchange.js","store/reducers/uiState.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","page","title","message","infoWrap","decorWrap","btnWrap","animation","mTomRound","btn-wrap","exchangeWidget","wrap","partConvertFrom","navWrap","partConvertTo","container","form","currencyStateElem","heading","off","label","labelRight","small","sumInputWrap","sumInput","inputTip","on","exchangeResult","header","exchangeBtn","sign","elem","list","item","btn","active","preloader","inner","spinner","rotate","path","dash","messageWrap","__webpack_require__","p","response","setCrucialError","createAction","actions","setUserData","setRates","setUserCurrency","setExchangeFromCurrency","setExchangeToCurrency","setExchangeSum","setIsExchangeSumAvailable","updateUserBalance","managePreloader","setPreloaderMessage","currencies","EUR","shortName","fullName","code","number","symbol","htmlCode","USD","GBP","JPY","constants_userData","name","surname","mainCurrency","account","amount","fetchUserData","userData","Promise","resolve","reject","setTimeout","checkStatus","status","concat","statusText","getJson","json","createUrl","endpoint","OEX","BASE_URL","KEY","createUrlWrongKey","FAKE_KEY","withQueryParams","createUrlFoo","paramsObj","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","key","val","getOExData","url","fetch","then","ENDPOINTS","openExchangeService","getBasicRates","params","base","symbols","values","map","join","console","log","getBasicRatesWithError","baseSymbol","getToCurrency","fromCurrency","userCurrencies","keys","indexOfFromCurrency","indexOf","length","sumRegexp","decimal","Big","isLessOrEqual","lte","convertFromTo","fromVal","toVal","divider","div","convertGivenSumFromTo","sum","times","formErrorMessage","reason","onPreloader","dispatch","msg","offPreloader","manageCatch","err","errMessage","error","CommonButton","props","react_default","a","createElement","type","className","styles","onClick","clickHandler","text","MajorTom","src","astronaut","style","width","height","alt","defaultProps","ErrorScreen","hidden","components_CommonButton_CommonButton","buttonText","buttonClickHandler","components_MajorTom_MajorTom","routes","CurrencyState","sharedStyles","currency","currCode","balance","react","getBalanceHtml","propsTypes","PropTypes","string","isRequired","getFromCurrency","state","get","exchange","getUserBalance","user","getExchangeSum","getMaxSumAvailable","getExchangeSumAvailability","createSelector","exchangeSum","max","ExchangeSum","inputRef","React","createRef","handleSumChange","value","target","test","_this","dispatchSum","this","current","focus","_cn","labelClassNames","cn","defineProperty","isAvailable","labelText","data-value","id","onChange","ref","htmlFor","Component","changeHandler","func","connect","mapStateToProps","userAccount","getExchangeState","CurrencyStatePropsPropxy","WrappedComponent","CurrencyStatePropsProxy","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","toCurrency","mapDispatchToProps","changeFormCurrency","changeToCurrency","HOC_ExchangeNavigationPropsProxy","ExchangeNavigationPropsProxy","getNextToCurrency","changeCurrencyHandler","currentCurrency","ExchangeResult","fromCurr","toCurr","rate","rates","toFixed","rateForUnit","headingClasses","getRates","Navigation","uniqueId","updateBalance","getState","newBalanceSnapshot","_getState","_getState$exchange","currentBalance","newBalance","initialBalance","fromSum","toSum","_objectSpread2","objectSpread","minus","plus","add","countNewBalance","SUCCESS_RESPONSE","Error","catch","disabled","FromCurrencyState","ToCurrencyState","FromNavigation","ToNavigation","ExchangeWidget","ExchangeWidget_ExchangeBtn","ExchangeWidget_ExchangeSum","ExchangeWidget_ExchangeResult","updateRates","_ref3","timestamp","prevRates","newRates","isEqual","Preloader","viewBox","cx","cy","r","fill","strokeWidth","isActive","WithExchangeRatesSubscription","ExchangeFuncContainer","_getPrototypeOf2","_len","args","Array","_key","call","interval","instanceReference","actionThunk","errorHandler","maxTry","undefined","retryInterval","recursive","tryCounter","clearTimeout","requestRecursively","ratesSubscription","isDataReady","isExchangeDataReady","components_ExchangeWidget_ExchangeWidget","components_Preloader_Preloader","reloadPage","window","location","reload","NotFoundPage","components_ErrorScreen_ErrorScreen","hasError","appStatus","getAppWorkStatus","errorMessage","getAppErrorMessage","Route","render","Switch","ROUTES","exact","ExchangeWidget_ExchangeWidgetContainer","RootRouter_NotFoundPage","historyReference","history","push","ui","preloaderBlock","getScreenPreloadingStatus","getScreenPreloadingMessage","getUserData","App","initialUploadCallback","setState","isPending","process","routes_RootRouter","components_GlobalPreloader_GlobalPreloader","withRouter","handleActions","_ref$payload","payload","works","_handleActions","currencyCode","balanceObject","exchange_handleActions","_ref4","bool","isSumAvailable","uiState_handleActions","_ref2$payload","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","es","BrowserRouter","basename","src_App"],"mappings":"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","file":"static/js/main.2a5ba6da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"errorScreen_page__3UNtk\",\"title\":\"errorScreen_title__1Xhh3\",\"message\":\"errorScreen_message__1XkSv\",\"infoWrap\":\"errorScreen_infoWrap__JW06V\",\"decorWrap\":\"errorScreen_decorWrap__Gxkk_\",\"btnWrap\":\"errorScreen_btnWrap__1eBxW\",\"animation\":\"errorScreen_animation__L2iO3\",\"mTomRound\":\"errorScreen_mTomRound__3ceX-\",\"btn-wrap\":\"errorScreen_btn-wrap__2udjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exchangeWidget\":\"exchangeWidget_exchangeWidget__2_VgS\",\"wrap\":\"exchangeWidget_wrap__2PQUt\",\"partConvertFrom\":\"exchangeWidget_partConvertFrom__3XwxU\",\"navWrap\":\"exchangeWidget_navWrap__3ck7d\",\"partConvertTo\":\"exchangeWidget_partConvertTo__2FBok\",\"container\":\"exchangeWidget_container__2wwhg\",\"form\":\"exchangeWidget_form__18NU6\",\"currencyStateElem\":\"exchangeWidget_currencyStateElem__Jkz1e\",\"heading\":\"exchangeWidget_heading__1VxT5\",\"off\":\"exchangeWidget_off__3BUMU\",\"label\":\"exchangeWidget_label__25tyP\",\"labelRight\":\"exchangeWidget_labelRight__2MTPF\",\"small\":\"exchangeWidget_small__3kG3d\",\"sumInputWrap\":\"exchangeWidget_sumInputWrap__uL8Tn\",\"sumInput\":\"exchangeWidget_sumInput__CYtQB\",\"inputTip\":\"exchangeWidget_inputTip__2TtYB\",\"on\":\"exchangeWidget_on__3-OZV\",\"exchangeResult\":\"exchangeWidget_exchangeResult__3bknv\",\"header\":\"exchangeWidget_header__1TE6j\",\"exchangeBtn\":\"exchangeWidget_exchangeBtn__QRNdm\",\"sign\":\"exchangeWidget_sign__2f-Ia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"navigation_elem__3GC1V\",\"list\":\"navigation_list__1dgLs\",\"item\":\"navigation_item__LcPye\",\"btn\":\"navigation_btn__2Fnxy\",\"active\":\"navigation_active___MHKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__P5Kfv\",\"inner\":\"preloader_inner__xqPfn\",\"spinner\":\"preloader_spinner__-vy9e\",\"rotate\":\"preloader_rotate__lwHjw\",\"path\":\"preloader_path__2L80I\",\"dash\":\"preloader_dash__JfZh3\",\"messageWrap\":\"preloader_messageWrap__1U3on\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"commonButton_btn__2FZp6\"};","module.exports = __webpack_public_path__ + \"static/media/astronaut.8aa75ecb.svg\";","import userData from './../constants/userData';\n\n\nconst emulateServerRequest = (response) => () => {\n  return new Promise((resolve, reject) => {\n    // setTimeout(() => reject('No access'), 2800);  // for error emulation\n    setTimeout(() => resolve(response), 1800);\n  });\n};\n\nexport const fetchUserData = emulateServerRequest(userData);\n\nexport const emulateAccountUpdateServerRequest = (newBalanceSnapshot) => {\n  return new Promise((resolve, reject) => {\n    const SUCCESS_RESPONSE = {\n      status: 200,\n      message: 'Yor balance successfully updated',\n      balance: { ...newBalanceSnapshot }\n    };\n    const ERROR_RESPONSE = { // eslint-disable-line no-unused-vars\n      status: 500,\n      message: 'Service is temporary unavailable'\n    };\n    // setTimeout(() => reject(ERROR_RESPONSE), 2400)  // for error emulation\n    setTimeout(() => resolve(SUCCESS_RESPONSE), 1200);\n  });\n};\n","import { createAction } from 'redux-actions';\n\nexport const setCrucialError = createAction('SET_CRUCIAL_ERROR');\nconst setUserData = createAction('SET_USER_DATA');\nconst setRates = createAction('SET_RATES');\nconst setUserCurrency = createAction('SET_USER_CURRENCY');\nconst setExchangeFromCurrency = createAction('SET_EXCHANGE_FROM_CURRENCY');\nconst setExchangeToCurrency = createAction('SET_EXCHANGE_TO_CURRENCY');\nconst setExchangeSum = createAction('SET_EXCHANGE_SUM');\nconst setIsExchangeSumAvailable = createAction('IS_EXCHANGE_SUM_AVAILABLE');\nconst updateUserBalance = createAction('UPDATE_USER_BALANCE');\nconst managePreloader = createAction('MANAGE_SCREEN_BLOCKING');\nconst setPreloaderMessage = createAction('SET_PRELOADER_MESSAGE');\n\nexport default {\n  setCrucialError,\n  setUserData,\n  setRates,\n\tsetUserCurrency,\n  setExchangeFromCurrency,\n  setExchangeToCurrency,\n  setExchangeSum,\n  setIsExchangeSumAvailable,\n  updateUserBalance,\n  managePreloader,\n  setPreloaderMessage\n}\n","export default {\n  EUR: {\n    shortName: 'eur',\n    fullName: 'Euro',\n    code: 'EUR',\n    number: 978,\n    symbol: '€',\n    htmlCode: '&euro;'\n  },\n  USD: {\n    shortName: 'usd',\n    fullName: 'US Dollar',\n    code: 'USD',\n    number: 840,\n    symbol: '$',\n    htmlCode: '&#36;'\n  },\n  GBP: {\n    shortName: 'gbp',\n    fullName: 'Pound Sterling',\n    code: 'GBP',\n    number: 826,\n    symbol: '£',\n    htmlCode: '&pound;'\n  },\n  JPY: {\n    shortName: 'jpy',\n    fullName: 'Japanese Yen',\n    code: 'JPY',\n    number: 392,\n    symbol: '¥',\n    htmlCode: '&yen;'\n  }\n}","import currencies from './currencies';\n\nexport default {\n  name: 'Vlad',\n  surname: 'Pocheptcov',\n  mainCurrency: currencies.USD.code,\n  account: {\n    EUR: {\n      symbol: currencies.EUR.code,\n      amount: '2100'\n    },\n    USD: {\n      symbol: currencies.USD.code,\n      amount: '4623.05'\n    },\n    GBP: {\n      symbol: currencies.GBP.code,\n      amount: '4319.49'\n    },\n    JPY: {\n      symbol: currencies.JPY.code,\n      amount: '35123.48'\n    }\n  }\n};\n","import { OEX } from '../services/openExchangeService';\n\n\nconst didRequestSucceed = (status) => status >= 200 && status < 300;\n\nconst checkStatus = (response) => {\n  return didRequestSucceed(response.status)\n    ? Promise.resolve(response)\n    : Promise.reject(`API response: ${response.statusText}`)\n};\n\nconst getJson = (response) =>  response.json();\n\nexport const createUrl = (endpoint) => {\n  return OEX.BASE_URL\n    + endpoint\n    + `?app_id=${OEX.KEY}`\n    ;\n};\n\nexport const createUrlWrongKey = (endpoint) => {\n  return OEX.BASE_URL\n    + endpoint\n    + `?app_id=${OEX.FAKE_KEY}`\n    ;\n};\n\nexport const withQueryParams = (createUrlFoo) => (endpoint) => (paramsObj) => {\n  return Object.entries(paramsObj).reduce((acc, [key, val]) => {\n    return acc + `&${key}=${val}`;\n  }, createUrlFoo(endpoint));\n};\n\nexport const getOExData = (url) => {\n  return fetch(url)\n    .then(checkStatus)\n    .then(getJson)\n};\n","import {createUrl, withQueryParams, getOExData, createUrlWrongKey} from \"./../utils/openExchangeUtils\";\nimport userData from './../constants/userData';\nimport currencies from './../constants/currencies';\n\nexport const OEX = {\n  KEY: '45df0613a845463591657cc7242dd4c0',\n  FAKE_KEY: 'qwerty12345',\n  BASE_URL: 'https://openexchangerates.org/api'\n};\n\nexport const ENDPOINTS = {\n  LATEST: '/latest.json'\n};\n\nconst getBasicRates = () => {\n  const endpoint = ENDPOINTS.LATEST;\n  const params = {\n    'base': userData.mainCurrency,\n    'symbols': Object.values(currencies).map(({ code }) => code).join(',')\n  };\n  const url = withQueryParams(createUrl)(endpoint)(params);\n  console.log(url);\n  return getOExData(url);\n};\n\nconst getBasicRatesWithError = () => {\n  const endpoint = ENDPOINTS.LATEST;\n  const params = {\n    'base': userData.baseSymbol,\n    'symbols': `${currencies.EUR.code},${currencies.USD.code},${currencies.GBP.code}`\n  };\n  const url = withQueryParams(createUrlWrongKey)(endpoint)(params);\n  console.log('url requested = ', url);\n  return getOExData(url);\n};\n\n\nconst openExchangeService = {\n  getBasicRates,\n  getBasicRatesWithError\n};\n\nexport default openExchangeService;","export const getToCurrency = (fromCurrency, userCurrencies) => {\n\tconst currencies = Object.keys(userCurrencies);\n\tconst indexOfFromCurrency = currencies.indexOf(fromCurrency);\n\tconst resultIndex = indexOfFromCurrency === currencies.length - 1 ? 0 : indexOfFromCurrency + 1;\n\treturn currencies[resultIndex];\n};\n\nexport const sumRegexp = /^$|(^\\d{1,10}(\\.\\d{0,2})?$)/;","import Big from 'big.js';\n\n\nexport const decimal = (val) => Big(val);\n\nexport const add = (decimal) => (val) => decimal.plus(val);\n\nexport const subtract = (decimal) => (val) => decimal.minus(val);\n\nexport const divide = (decimal) => (divider) => decimal.div(divider);\n\nexport const multiply = (decimal) => (times) => decimal.times(times);\n\nexport const isLessOrEqual = (decimal) => (val) => decimal.lte(val);\n","import {\n  decimal,\n  divide,\n  multiply,\n} from './decimal';\n\nexport const convertFromTo = (fromVal) => (toVal) => ( // both values must have the same base\n  divide(decimal(fromVal))(toVal)\n);\n\nexport const convertGivenSumFromTo = (sum) => (fromVal) => (toVal) => {\n  return multiply(convertFromTo(fromVal)(toVal))(sum);\n};\n\nexport const combRates = (newBase, rates) => {\n  return Object.entries(rates).reduce((acc, [ curr, rate ]) => {\n    return { ...acc, [curr]: convertFromTo(rate)(rates[newBase]).toFixed(4) }\n  }, {});\n};\n","import actions from './index.js'\nimport { fetchUserData } from '../../services/domainServerService';\nimport openExchangeService from './../../services/openExchangeService';\nimport { getToCurrency } from './../../utils/currencies';\nimport { emulateAccountUpdateServerRequest } from './../../services/domainServerService';\nimport { countNewBalance } from './../../utils/countNewBalance';\nimport { convertGivenSumFromTo } from \"../../utils/conversion\";\nimport { isEqual } from 'lodash';\n\n\nexport const formErrorMessage = (reason) => {\n  return `We see that some error occurred because of the following reason:\\n${reason}`;\n};\n\nconst onPreloader = (dispatch, msg) => {\n  dispatch(actions.managePreloader(true));\n  dispatch(actions.setPreloaderMessage(msg));\n};\n\nconst offPreloader = (dispatch) => {\n  dispatch(actions.managePreloader(false));\n  dispatch(actions.setPreloaderMessage(''));\n};\n\nconst manageCatch = (dispatch, err, errMessage) => {\n  console.error(err);\n  dispatch(actions.setCrucialError(errMessage));\n};\n\n// -----> FYI <-----\n// to trigger error uncomment line 6 in ../services/domainServerService.js\n\nexport const initialUpload = () => {\n  return (dispatch) => {\n    onPreloader(dispatch, 'Loding your data...');\n    return Promise.all([fetchUserData(), openExchangeService.getBasicRates()])\n      .then(([ userData, { base, rates, timestamp } ]) => {\n        dispatch(actions.setUserData(userData));\n        dispatch(actions.setRates({ base, rates, timestamp }));\n        dispatch(actions.setExchangeFromCurrency(userData.mainCurrency));\n        dispatch(actions.setExchangeToCurrency(getToCurrency(userData.mainCurrency, userData.account)));\n        offPreloader(dispatch);\n      })\n      .catch(err => {\n        const msg = formErrorMessage(`\"${err}\"`);\n        offPreloader(dispatch);\n        manageCatch(dispatch, err, msg);\n      });\n  }\n};\n\nexport const getUserData = () => {\n  return (dispatch) => {\n    fetchUserData()\n      .then(userData => {\n        dispatch(actions.setExchangeFromCurrency(userData.mainCurrency));\n        dispatch(actions.setExchangeToCurrency(getToCurrency(userData.mainCurrency, userData.account)));\n        dispatch(actions.setUserData(userData));\n      })\n      .catch(err => {\n        const msg = formErrorMessage(`\"${err}\"`);\n        manageCatch(dispatch, err, msg);\n      });\n  };\n};\n\nexport const updateRates = () => {\n  return (dispatch, getState) => {\n    return openExchangeService.getBasicRates()\n      .then(({ base, rates, timestamp }) => {\n        const prevRates = getState().rates;\n        const newRates = { base, rates, timestamp };\n        if (isEqual(prevRates, newRates)) return;\n        dispatch(actions.setRates(newRates));\n      },\n\t\t\t\terr => {\n\t\t\t\t\tconst msg = formErrorMessage(`API response ${err}`);\n\t\t\t\t\treturn Promise.reject(msg);\n\t\t\t\t});\n  }\n};\n\nexport const updateBalance = () => {\n  return (dispatch, getState) => {\n    const {\n      exchange: { fromCurrency, toCurrency, sum },\n      user: { account: currentBalance },\n      rates : { rates }\n    } = getState();\n    const newBalance = countNewBalance(\n      currentBalance,\n      fromCurrency,\n      sum,\n      toCurrency,\n      convertGivenSumFromTo(sum)(rates[toCurrency])(rates[fromCurrency]).toFixed(4)\n    );\n    onPreloader(dispatch, 'Updating your account...');\n    emulateAccountUpdateServerRequest(newBalance)\n      .then(response => {\n        if (response.status === 200) {\n          dispatch(actions.updateUserBalance(response.balance));\n          dispatch(actions.setExchangeSum(''));\n          offPreloader(dispatch);\n        } else {\n          throw Error(response.message);\n        }\n      })\n      .catch(err => {\n        const msg = formErrorMessage(err.message);\n        manageCatch(dispatch, err, msg);\n        offPreloader(dispatch);\n      })\n  };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './commonButton.module.css';\n\nconst CommonButton = (props) => {\n  return (\n    <button type={props.type}\n            className={styles.btn}\n            onClick={props.clickHandler}\n            title={props.title}\n    >\n      {props.text}\n    </button>\n  );\n};\n\nCommonButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func,\n  title: PropTypes.string\n};\n\nexport default CommonButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport astronaut from './../../assets/icons/astronaut.svg';\n\nconst MajorTom = (props) => {\n  return (\n    <img src={astronaut}\n         style={{\n           width: props.width,\n           height: props.height\n         }}\n         alt=\"astronaut\"\n    />\n  );\n};\n\nMajorTom.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n\nMajorTom.defaultProps = {\n  width: '40px',\n  height: '40px'\n};\n\nexport default MajorTom;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport styles from './errorScreen.module.css';\nimport CommonButton from './../CommonButton/CommonButton';\nimport MajorTom from \"../MajorTom/MajorTom\";\n\n\n\nconst ErrorScreen = (props) => {\n  return (\n    <article className={styles.page}>\n      <h4 className=\"visuallyhidden\" hidden>Error</h4>\n      <div className={styles.infoWrap}>\n        <span className={styles.title}>Oops!</span>\n        <p className={styles.message}>\n          { props.message }\n        </p>\n        <div className={styles.btnWrap}>\n          <CommonButton text={props.buttonText}\n                        type={'button'}\n                        clickHandler={props.buttonClickHandler}\n          />\n        </div>\n      </div>\n      <div className={styles.decorWrap}>\n        <div className={styles.animation}>\n          <MajorTom width=\"100%\" height=\"100%\" />\n        </div>\n      </div>\n    </article>\n  );\n};\n\nErrorScreen.propTypes = {\n  message: PropTypes.string,\n  buttonText: PropTypes.string,\n  buttonClickHandler: PropTypes.func\n};\n\nErrorScreen.defaultProps = {\n  message: 'Some undetected error occurred'\n};\n\nexport default ErrorScreen;","export default {\n  APP_ERROR: '/error',\n  INDEX: '/'\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport sharedStyles from './../ExchangeWidget/exchangeWidget.module.css';\nimport currencies from './../../constants/currencies';\n\nconst getBalanceHtml = (currCode, balance) => {\n  const symbol = currencies[currCode].symbol;\n  return (\n    <Fragment>\n      You have <span className={sharedStyles.small}>{symbol}</span>{balance}\n    </Fragment>\n  );\n};\n\nconst CurrencyState = (props) => {\n  return (\n    <div className={sharedStyles.currencyStateElem}>\n      <span className={sharedStyles.heading}>{ props.currency }</span>\n      <small className={sharedStyles.label}>\n        { getBalanceHtml(props.currency, props.balance) }\n      </small>\n    </div>\n  );\n};\n\nCurrencyState.propsTypes = {\n  currency: PropTypes.string.isRequired,\n  balance: PropTypes.string.isRequired\n};\n\nexport default CurrencyState;","import { createSelector } from 'reselect';\nimport { decimal, isLessOrEqual } from './../utils/decimal';\nimport { get } from 'lodash';\n\nexport const getAppWorkStatus = (state) => get(state.appStatus, 'works');\nexport const getAppErrorMessage = (state) => get(state.appStatus, 'errorMessage');\n\nexport const isExchangeDataReady = (state) => !!(\n  get(state, 'rates') && get(state, 'user')\n);\n\nexport const getFromCurrency = (state) => get(state.exchange, 'fromCurrency');\nexport const getToCurrency = (state) => get(state.exchange, 'toCurrency');\nexport const getUserBalance = (state) => get(state.user, 'account');\nexport const getExchangeState = (state) => get(state, 'exchange');\nexport const getExchangeSum = (state) => get(state.exchange, 'sum');\nexport const getMaxSumAvailable = (state) => {\n  return state.user.account[state.exchange.fromCurrency].amount;\n};\nexport const getExchangeSumAvailability = createSelector(\n  [getExchangeSum, getMaxSumAvailable],\n  (exchangeSum, max) => {\n    return isLessOrEqual(decimal(exchangeSum || 0))(max)\n  }\n);\nexport const getRates = (state) => get(state.rates, 'rates');\nexport const getScreenPreloadingStatus = (state) => get(state.ui.preloaderBlock, 'isActive');\nexport const getScreenPreloadingMessage = (state) => get(state.ui.preloaderBlock, 'message');","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sharedStyles from './exchangeWidget.module.css';\nimport { getExchangeSum, getMaxSumAvailable, getExchangeSumAvailability } from './../../selectors';\nimport actions from './../../store/actions';\nimport { sumRegexp } from './../../utils/currencies';\nimport cn from 'classnames';\n\nconst inputId='sum';\n\nconst mapStateToProps = (state) => {\n  return {\n    exchangeSum: getExchangeSum(state),\n    max: getMaxSumAvailable(state),\n    isAvailable: getExchangeSumAvailability(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchSum: (value) => {\n      dispatch(actions.setExchangeSum(value))\n    }\n  }\n};\n\nclass ExchangeSum extends Component {\n  inputRef = React.createRef();\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handleSumChange = ({ target: { value } }) => {\n    sumRegexp.test(value) && this.props.dispatchSum(value);\n  };\n\n  render() {\n    const labelClassNames = cn({\n      [sharedStyles.label]: true,\n      [sharedStyles.inputTip]: true,\n      [sharedStyles.on]: !this.props.exchangeSum || (this.props.exchangeSum && !this.props.isAvailable)\n    });\n\n    const labelText = !this.props.exchangeSum\n      ? 'type the sum'\n      : !this.props.isAvailable\n        ? 'overbalanced' : '';\n\n    return (\n      <div className={`${sharedStyles.sumInputWrap} ${sharedStyles.heading}`}\n           data-value={this.props.exchangeSum}\n      >\n        { this.props.exchangeSum && <span className={sharedStyles.sign}>— </span> }\n        <input className={sharedStyles.sumInput}\n               type=\"text\"\n               id={inputId}\n               value={this.props.exchangeSum}\n               name=\"exchange-sum\"\n               onChange={this.handleSumChange}\n               ref={this.inputRef}\n        />\n        <label htmlFor={inputId}\n               className={labelClassNames}\n        >\n          { labelText }\n        </label>\n      </div>\n    );\n  }\n}\n\nExchangeSum.propsTypes = {\n  changeHandler: PropTypes.func.isRequired,\n  value: PropTypes.string\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExchangeSum);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserBalance, getExchangeState } from '../selectors';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userAccount: getUserBalance(state),\n    exchange: getExchangeState(state)\n  };\n};\n\nexport default (WrappedComponent, type) => {\n  class CurrencyStatePropsProxy extends Component {\n\n    render() {\n      const currency = ((type) => {\n        switch (type) {\n          case 'from':\n            return this.props.exchange.fromCurrency;\n          case 'to':\n            return this.props.exchange.toCurrency;\n          default:\n            console.error('An error occurred. Please check CurrencyStatePropsProxy function to clarify');\n            return false;\n        }\n      })(type);\n      return (\n        currency\n          ? <WrappedComponent currency={currency}\n                              balance={this.props.userAccount[currency].amount}\n          />\n          : <span>n/d</span>\n      )\n      ;\n    }\n  }\n\n  return connect(mapStateToProps)(CurrencyStatePropsProxy)\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getFromCurrency, getToCurrency, getUserBalance} from '../selectors';\nimport actions from \"../store/actions\";\nimport { getToCurrency as getNextToCurrency } from \"./../utils/currencies\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    fromCurrency: getFromCurrency(state),\n    toCurrency: getToCurrency(state),\n    userCurrencies: getUserBalance(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeFormCurrency: (currency) => {\n      dispatch(actions.setExchangeFromCurrency(currency));\n    },\n    changeToCurrency: (currency) => {\n      dispatch(actions.setExchangeToCurrency(currency));\n    }\n  }\n};\n\nexport default (WrappedComponent, type) => {\n\n  class ExchangeNavigationPropsProxy extends Component {\n\n    componentDidUpdate() {\n        if (this.props.fromCurrency === this.props.toCurrency) {\n          this.props.changeToCurrency(\n            getNextToCurrency(this.props.fromCurrency, this.props.userCurrencies)\n          );\n        }\n    }\n\n    render() {\n      return (\n        <WrappedComponent changeCurrencyHandler={ type === 'from'\n                            ? this.props.changeFormCurrency\n                            : this.props.changeToCurrency }\n                          userCurrencies={this.props.userCurrencies}\n                          currentCurrency={ type === 'from'\n                            ? this.props.fromCurrency\n                            : this.props.toCurrency }\n\n        />\n      );\n    }\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ExchangeNavigationPropsProxy)\n};","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sharedStyles from './exchangeWidget.module.css';\nimport { getExchangeSum, getFromCurrency, getToCurrency, getRates } from './../../selectors';\nimport currencies from './../../constants/currencies';\nimport { convertGivenSumFromTo } from './../../utils/conversion';\nimport cn from 'classnames';\n\nconst getRatesHtml = (fromCurr, toCurr, rate) => {\n  return (\n    <Fragment>\n      <span className={sharedStyles.small}>{currencies[fromCurr].symbol}</span>1 =\n      <span className={sharedStyles.small}>{currencies[toCurr].symbol}</span>{rate}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    exchangeSum: getExchangeSum(state),\n    fromCurrency: getFromCurrency(state),\n    toCurrency: getToCurrency(state),\n    rates: getRates(state)\n  };\n};\n\nconst ExchangeResult = (props) => {\n  const { exchangeSum, fromCurrency, toCurrency, rates } = props;\n  const sum = convertGivenSumFromTo(exchangeSum || 0)(rates[toCurrency])(rates[fromCurrency])\n    .toFixed(2)\n  ;\n  const rateForUnit = convertGivenSumFromTo(1)(rates[toCurrency])(rates[fromCurrency])\n    .toFixed(2)\n  ;\n  const headingClasses = cn({\n    [sharedStyles.heading]: true,\n    [sharedStyles.off]: !exchangeSum\n  });\n\n  return (\n    <div className={sharedStyles.exchangeResult}>\n      <span className={headingClasses}><span className={sharedStyles.sign}>+ </span>{ sum }</span>\n      <small className={sharedStyles.label}>\n        { getRatesHtml(fromCurrency, toCurrency, rateForUnit) }\n      </small>\n    </div>\n  );\n};\n\nExchangeResult.propsTypes = {\n  exchangeSum: PropTypes.string,\n  rate: PropTypes.string,\n  fromCurrency: PropTypes.string,\n  toCurrency: PropTypes.string\n};\n\nexport default connect(mapStateToProps)(ExchangeResult);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './navigation.module.css';\nimport cn from 'classnames';\nimport { uniqueId } from 'lodash';\n\nconst Navigation = (props) => {\n  const { userCurrencies, currentCurrency, changeCurrencyHandler } = props;\n\n  const clickHandler = (currency) => () => {\n    changeCurrencyHandler(currency);\n  };\n  return (\n    <nav className={styles.elem}>\n      <ul className={styles.list}>\n        {\n          Object.keys(userCurrencies).map(currCode => (\n            <li className={styles.item} key={uniqueId()}>\n              <button className={cn({\n                        [styles.btn]: true,\n                        [styles.active]: currCode === currentCurrency\n                      })}\n                      type=\"button\"\n                      title={currCode}\n                      onClick={clickHandler(currCode)}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </nav>\n  );\n};\n\nNavigation.propTypes = {\n  userCurrencies: PropTypes.object,\n  currentCurrency: PropTypes.string,\n  changeCurrencyHandler: PropTypes.func\n};\n\nexport default Navigation;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './exchangeWidget.module.css';\nimport { connect } from 'react-redux';\nimport {\n  getExchangeSum,\n  getExchangeSumAvailability\n} from './../../selectors';\nimport { isLessOrEqual, decimal } from './../../utils/decimal';\nimport { updateBalance } from './../../store/actions/thunks';\n\nconst mapStateToProps = (state) => {\n  return {\n    exchangeSum: getExchangeSum(state),\n    isAvailable: getExchangeSumAvailability(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  updateBalance\n};\n\nconst ExchangeBtn = (props) => {\n  const disabled = !props.isAvailable\n    || isLessOrEqual(decimal(props.exchangeSum || 0))(0);\n\n  return (\n    <button className={styles.exchangeBtn}\n            type=\"button\"\n            disabled={disabled}\n            onClick={props.updateBalance}\n    >\n      Exchange\n    </button>\n  );\n};\n\nExchangeBtn.propTypes = {\n  clickHandler: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExchangeBtn);","import { decimal, add, subtract } from './decimal';\n\nexport const countNewBalance = (initialBalance, fromCurr, fromSum, toCurr, toSum) => {\n  return {\n    ...initialBalance,\n    [fromCurr]: {\n      symbol: fromCurr,\n      amount: subtract(decimal(initialBalance[fromCurr].amount))(fromSum).toFixed(2)\n    },\n    [toCurr]: {\n      symbol: toCurr,\n      amount: add(decimal(initialBalance[toCurr].amount))(toSum).toFixed(2)\n    }\n  };\n};","import React from 'react';\nimport styles from './exchangeWidget.module.css';\nimport CurrencyState from './CurrencyState';\nimport ExchangeSum from './ExchangeSum';\nimport CurrencyStatePropsProxy from './../../HOC/CurrencyStatePropsPropxy';\nimport ExchangeNavigationPropsProxy from './../../HOC/ExchangeNavigationPropsProxy';\nimport ExchangeResult from './ExchangeResult';\nimport Navigation from './../Navigation';\nimport ExchangeBtn from './ExchangeBtn';\n\nconst FromCurrencyState = CurrencyStatePropsProxy(CurrencyState, 'from');\nconst ToCurrencyState = CurrencyStatePropsProxy(CurrencyState, 'to');\nconst FromNavigation = ExchangeNavigationPropsProxy(Navigation, 'from');\nconst ToNavigation = ExchangeNavigationPropsProxy(Navigation, 'to');\n\nconst ExchangeWidget = () => {\n  return (\n    <article className={styles.exchangeWidget}>\n      <div className={styles.wrap}>\n        <header className={styles.header}>\n          <h1 className=\"visuallyhidden\">Ex Widget</h1>\n          <div className={styles.container}>\n            <ExchangeBtn />\n          </div>\n        </header>\n        <div className={styles.partConvertFrom}>\n          <div className={styles.container}>\n            <div className={styles.form}>\n              <FromCurrencyState />\n              <ExchangeSum />\n            </div>\n          </div>\n          <div className={styles.navWrap}>\n            <FromNavigation />\n          </div>\n        </div>\n        <div className={styles.partConvertTo}>\n          <div className={styles.container}>\n            <div className={styles.form}>\n              <ToCurrencyState />\n              <ExchangeResult />\n            </div>\n          </div>\n          <div className={styles.navWrap}>\n            <ToNavigation />\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default ExchangeWidget;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateRates } from \"../store/actions/thunks\";\nimport { setCrucialError } from './../store/actions';\nimport { requestRecursively, abortSubscription } from \"../utils/ratesRequestInterval\";\n\n\n\nconst mapDispatchToProps = {\n  updateRates,\n  setCrucialError\n};\n\nexport default (WrappedComponent) => {\n  class ExchangeFuncContainer extends Component {\n    interval = { id: 0 };\n\n    componentDidMount() {\n      const ratesSubscription = requestRecursively(\n        this.interval,\n        this.props.updateRates,\n        this.props.setCrucialError\n      );\n      ratesSubscription(1);\n    };\n\n    componentWillUnmount() {\n      abortSubscription(this.interval);\n    }\n\n    render() {\n      return <WrappedComponent />;\n    }\n  }\n\n  return connect(null, mapDispatchToProps)(ExchangeFuncContainer);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './preloader.module.css';\n\nconst Preloader = (props) => {\n  return (\n    <div className={styles.preloader}>\n      <div className={styles.inner}>\n        {\n          props.message && (\n            <div className={styles.messageWrap}>\n              { props.message }\n            </div>\n          )\n        }\n        <svg className={styles.spinner} viewBox=\"0 0 50 50\">\n          <circle className={styles.path} cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\" />\n        </svg>\n      </div>\n    </div>\n  )\n};\n\nPreloader.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  message: PropTypes.string\n};\n\nPreloader.defaultProps = {\n  isActive: false,\n  message: ''\n};\n\nexport default Preloader;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExchangeWidget from './ExchangeWidget';\nimport WithExchangeRatesSubscription from './../../HOC/WithExchangeRatesSubscription';\nimport Preloader from './../Preloader/Preloader';\nimport { isExchangeDataReady } from \"./../../selectors\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isDataReady: isExchangeDataReady(state)\n  }\n};\n\nconst ExchangeWidgetContainer = (props) => {\n  return props.isDataReady\n    ? <ExchangeWidget />\n    : <Preloader />\n};\n\nexport default WithExchangeRatesSubscription(connect(mapStateToProps)(ExchangeWidgetContainer));","export const requestRecursively = (\n  instanceReference,\n  actionThunk,\n  errorHandler,\n  maxTry = 3,\n  interval = 25000,\n  retryInterval = 2000\n) => {\n  return function recursive(tryCounter) {\n    return actionThunk()\n      .then(() => {\n        instanceReference.id = setTimeout(() => recursive(1), interval);\n      })\n      .catch(err => {\n        if (tryCounter > maxTry) {\n          clearTimeout(instanceReference.id);\n          errorHandler(err);\n          return;\n        }\n        instanceReference.id = setTimeout(() => recursive(++tryCounter), retryInterval)\n      });\n  }\n};\n\nexport const abortSubscription = (instanceReference) => clearTimeout(instanceReference);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { Switch, Route } from 'react-router';\nimport ErrorScreen from './../components/ErrorScreen/ErrorScreen.js';\nimport ROUTES from './../constants/routes';\nimport ExchangeWidgetContainer from './../components/ExchangeWidget/ExchangeWidgetContainer';\nimport { getAppWorkStatus, getAppErrorMessage } from './../selectors';\n\n\nconst NOT_FOUND_MSG = 'Page not found';\n\nconst reloadPage = () => {\n  window.location.reload();\n};\n\nconst redirectHome = (historyReference) => () => {\n  historyReference.push('/');\n};\n\nconst NotFoundPage = (props) => {\n  return <ErrorScreen message={NOT_FOUND_MSG}\n                      buttonText=\"Home\"\n                      buttonClickHandler={props.buttonClickHandler}\n  />\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    hasError: !getAppWorkStatus(state),\n    errorMessage: getAppErrorMessage(state)\n  };\n};\n\nconst RootRouter = (props) => {\n  return (\n    props.hasError\n      ? <Route render={ () => <ErrorScreen message={props.errorMessage}\n                                           buttonText=\"Reload\"\n                                           buttonClickHandler={reloadPage} />\n      } />\n      : (\n        <Switch>\n          <Route path={ROUTES.INDEX} exact render={ () => <ExchangeWidgetContainer /> } />\n          <Route render={ () =>\n            <NotFoundPage buttonClickHandler={redirectHome(props.history) } />\n          } />\n        </Switch>\n      )\n    );\n};\n\nRootRouter.propTypes = {\n  hasError: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string\n};\n\nexport default connect(mapStateToProps)(RootRouter);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getScreenPreloadingStatus, getScreenPreloadingMessage } from './../../selectors';\nimport Preloader from \"./../Preloader/Preloader\";\n\nconst mapStateToProps = (state) => {\n  return {\n    isActive: getScreenPreloadingStatus(state),\n    message: getScreenPreloadingMessage(state)\n  };\n};\n\nconst GlobalPreloader = (props) => {\n  return props.isActive && <Preloader />\n};\n\nexport default connect(mapStateToProps)(GlobalPreloader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserData } from './store/actions/thunks';\nimport RootRouter from './routes/RootRouter';\nimport { withRouter } from 'react-router';\nimport GlobalPreloader from \"./components/GlobalPreloader/GlobalPreloader\";\n\nconst mapDispatchToProps = {\n  getUserData\n};\n\nclass App extends Component {\n\n  componentDidMount() {\n    console.log('start the app');\n    console.log(process.env.PUBLIC_URL);\n    this.props.getUserData();\n  }\n\n  initialUploadCallback = () => {\n    this.setState(() => ({ isPending: false }));\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <RootRouter {...this.props} />\n        <GlobalPreloader />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n","import actions from './../actions';\nimport { handleActions } from 'redux-actions';\n\nconst DEFAULT_ERROR_MSG = 'Undefined error occurred. Please contact the support';\n\nexport const appStatus = handleActions({\n  [actions.setCrucialError]: (state, { payload: message = DEFAULT_ERROR_MSG }) => {\n    return { works: false, errorMessage: message }\n  }\n}, {\n  works: true,\n  errorMessage: ''\n});","import actions from './../actions';\nimport { handleActions } from 'redux-actions';\n\nexport const user = handleActions({\n  [actions.setUserData]: (state, { payload: userData }) => {\n    return userData\n  },\n\t[actions.setUserCurrency]: (state, { payload: currencyCode }) => {\n  \treturn { ...state, mainCurrency: currencyCode }\n\t},\n  [actions.updateUserBalance]: (state, { payload: balanceObject }) => {\n    return { ...state, account: balanceObject }\n  }\n}, null);","import actions from './../actions';\nimport { handleActions } from 'redux-actions';\n\nexport const rates = handleActions({\n  [actions.setRates]: (state, { payload: rates }) => {\n    return rates\n  }\n}, null);","import actions from './../actions';\nimport { handleActions } from 'redux-actions';\n\nexport const exchange = handleActions({\n  [actions.setExchangeFromCurrency]: (state, { payload: currCode }) => {\n    return { ...state, fromCurrency: currCode }\n  },\n  [actions.setExchangeToCurrency]: (state, { payload: currCode }) => {\n    return { ...state, toCurrency: currCode }\n  },\n  [actions.setExchangeSum]: (state, { payload: value }) => {\n    return { ...state, sum: value }\n  },\n  [actions.setIsExchangeSumAvailable]: (state, { payload: bool }) => {\n    return { ...state, isAvailable: bool }\n  }\n}, {\n  fromCurrency: '',\n  toCurrency: '',\n  sum: '',\n  isSumAvailable: true\n});","import actions from './../actions';\nimport { handleActions } from 'redux-actions';\n\nexport const ui = handleActions({\n  [actions.managePreloader]:(state, { payload: bool }) => {\n    return { ...state, preloaderBlock: { ...state.preloaderBlock, isActive: bool } };\n  },\n  [actions.setPreloaderMessage]:(state, { payload: msg = '' }) => {\n    return { ...state, preloaderBlock: { ...state.preloaderBlock, message: msg } };\n  }\n}, {\n  preloaderBlock: { isActive: false, message: '' }\n});","import { combineReducers } from \"redux\";\nimport { appStatus } from \"./appStatus\";\nimport { user } from \"./user\";\nimport { rates } from \"./rates\";\nimport { exchange } from \"./exchange\";\nimport { ui } from './uiState';\n\nexport default combineReducers({\n  appStatus,\n  user,\n  rates,\n  exchange,\n  ui\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./reducers\";\nimport thunk from 'redux-thunk';\n\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(\n        thunk\n    ))\n);\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from \"./store/\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    rootElement\n);\n"],"sourceRoot":""}